% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2.R
\name{pragmatic}
\alias{pragmatic}
\title{Pragmatic hypothesis calculation}
\usage{
pragmatic(null, epsilon, log_f, generate_samples, B, par_grid = NULL,
  grid_lim = NULL, grid_dots = NULL)
}
\arguments{
\item{null}{The original null hypothesis point.}

\item{epsilon}{Dissimilarity threshold.}

\item{log_f}{A function that computes the log-likelihood of the new experiment.}

\item{generate_samples}{A funtion that generates new samples from the original distribution.}

\item{B}{Number of Monte Carlo simulations.}

\item{par_grid}{Grid of parameters to test.}

\item{grid_lim}{If par_grid is not defined, this controls the limits of an internal constructed grid.}

\item{grid_dots}{If par_grid is not defined, this controls the length of an internal constructed grid.}
}
\value{
A list containing: The used parameter grid, the used threshold, and a logical vector indicating which of the parameters from the grid belongs to the pragmatic hypothesis.
}
\description{
The pragmatic function calculates a pragmatic hypothesis basic on a simple one.
}
\examples{

# Generate original data
data <- rnorm(100)

# Define the log-likelihood function
log_f = function(x, mu, sigma) {
  output = 0
    for(i in 1:length(x))
      output = output + log((sigma * sqrt(2*pi))^(-1) * exp(-((x[i]-mu)^2/2*sigma^2)))
  return(output)
}

# Estimate the variance
sigma = var(data)

# Define a secondary function that calculates the log-likelihood considering estimated variance
log_f_sigma = function(x, mu) {
  output = log_f(x, mu, sigma)
}

#Define a function that generate samples considering estimated variance
samples = function(B, mu) {
  return(rnorm(B, mu, sigma))
}

# Calculate the pragmatic hypothesis and summarize it
results = pragmatic(null = 0, epsilon = 0.6, log_f = log_f_sigma, generate_samples = samples, B = 10000, par_grid = seq(-1, 1, length = 201))
summary(results)

}
